{"ast":null,"code":"var _jsxFileName = \"/home/abdul/Documents/Reactprog/ContactManager/frontend/src/Components/Private.js\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport authContext from '../ContextAPI/Auth/authContext';\n\nconst Private = ({\n  component: Component,\n  ...rest\n}) => {\n  const Auc = useContext(authContext);\n  const {\n    isAuth,\n    loading\n  } = Auc;\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => !isAuth && !loading ? React.createElement(Redirect, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }) : React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }));\n};\n\nexport default Private;","map":{"version":3,"sources":["/home/abdul/Documents/Reactprog/ContactManager/frontend/src/Components/Private.js"],"names":["React","useContext","Route","Redirect","authContext","Private","component","Component","rest","Auc","isAuth","loading","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,WAAP,MAAwB,gCAAxB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AACnD,QAAMC,GAAG,GAAGR,UAAU,CAACG,WAAD,CAAtB;AACA,QAAM;AAAEM,IAAAA,MAAF;AAAUC,IAAAA;AAAV,MAAsBF,GAA5B;AACA,SACI,oBAAC,KAAD,oBACQD,IADR;AAEI,IAAA,MAAM,EAAEI,KAAK,IACT,CAACF,MAAD,IAAW,CAACC,OAAZ,GACI,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,GAGI,oBAAC,SAAD,oBAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAYH,CAfD;;AAgBA,eAAeP,OAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport authContext from '../ContextAPI/Auth/authContext';\n\nconst Private = ({ component: Component, ...rest }) => {\n    const Auc = useContext(authContext);\n    const { isAuth, loading } = Auc;\n    return (\n        <Route\n            {...rest}\n            render={props =>\n                !isAuth && !loading ? (\n                    <Redirect to='/login' />\n                ) : (\n                    <Component {...props} />\n                )\n            }\n        />\n    );\n};\nexport default Private;\n"]},"metadata":{},"sourceType":"module"}