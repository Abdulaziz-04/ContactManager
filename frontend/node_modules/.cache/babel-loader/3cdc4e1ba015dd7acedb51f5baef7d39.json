{"ast":null,"code":"var _jsxFileName = \"/home/abdul/Documents/Reactprog/ContactManager/frontend/src/Components/Contactmap.js\";\nimport React, { useContext, Fragment, useEffect } from 'react';\nimport cmContext from '../ContextAPI/CM/cmContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Spin from '../Components/Spinner/Spin';\nimport CL from './CL';\n\nconst Contactmap = () => {\n  const context = useContext(cmContext);\n  const {\n    contacts,\n    filter,\n    getContacts,\n    loading\n  } = context;\n  useEffect(() => {\n    getContacts(); //eslint-disable-next-line\n  }, []);\n\n  if (contacts !== null && contacts.length === 0) {\n    return React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, \"Please add Contacts...\");\n  }\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, contacts !== null && !loading ? React.createElement(TransitionGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, filter !== null ? filter.map(contact => React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: {\n      appear: 0,\n      enter: 0,\n      exit: 300\n    },\n    classNames: \"roll\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(CL, {\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }))) : contacts.map(contact => React.createElement(CSSTransition, {\n    key: contact._id,\n    timeout: {\n      appear: 0,\n      enter: 0,\n      exit: 300\n    },\n    classNames: \"roll\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(CL, {\n    contact: contact,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })))) : React.createElement(Spin, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }));\n};\n\nexport default Contactmap;","map":{"version":3,"sources":["/home/abdul/Documents/Reactprog/ContactManager/frontend/src/Components/Contactmap.js"],"names":["React","useContext","Fragment","useEffect","cmContext","CSSTransition","TransitionGroup","Spin","CL","Contactmap","context","contacts","filter","getContacts","loading","length","map","contact","_id","appear","enter","exit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,wBAA/C;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,EAAP,MAAe,MAAf;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACrB,QAAMC,OAAO,GAAGT,UAAU,CAACG,SAAD,CAA1B;AACA,QAAM;AAAEO,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA,WAApB;AAAiCC,IAAAA;AAAjC,MAA6CJ,OAAnD;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,WAAW,GADC,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT;;AAIA,MAAIF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,CAACI,MAAT,KAAoB,CAA7C,EAAgD;AAC5C,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AACH;;AACD,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,QAAQ,KAAK,IAAb,IAAqB,CAACG,OAAtB,GACG,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,MAAM,KAAK,IAAX,GACKA,MAAM,CAACI,GAAP,CAAWC,OAAO,IACd,oBAAC,aAAD;AACI,IAAA,GAAG,EAAEA,OAAO,CAACC,GADjB;AAEI,IAAA,OAAO,EAAE;AAAEC,MAAAA,MAAM,EAAE,CAAV;AAAaC,MAAAA,KAAK,EAAE,CAApB;AAAuBC,MAAAA,IAAI,EAAE;AAA7B,KAFb;AAGI,IAAA,UAAU,EAAC,MAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,EAAD;AAAI,IAAA,OAAO,EAAEJ,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,CADL,GAUKN,QAAQ,CAACK,GAAT,CAAaC,OAAO,IAChB,oBAAC,aAAD;AACI,IAAA,GAAG,EAAEA,OAAO,CAACC,GADjB;AAEI,IAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,CADH;AAELC,MAAAA,KAAK,EAAE,CAFF;AAGLC,MAAAA,IAAI,EAAE;AAHD,KAFb;AAOI,IAAA,UAAU,EAAC,MAPf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASI,oBAAC,EAAD;AAAI,IAAA,OAAO,EAAEJ,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,CADJ,CAXV,CADH,GA2BG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5BR,CADJ;AAiCH,CA3CD;;AA4CA,eAAeR,UAAf","sourcesContent":["import React, { useContext, Fragment, useEffect } from 'react';\nimport cmContext from '../ContextAPI/CM/cmContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Spin from '../Components/Spinner/Spin';\nimport CL from './CL';\n\nconst Contactmap = () => {\n    const context = useContext(cmContext);\n    const { contacts, filter, getContacts, loading } = context;\n    useEffect(() => {\n        getContacts();\n        //eslint-disable-next-line\n    }, []);\n    if (contacts !== null && contacts.length === 0) {\n        return <h3>Please add Contacts...</h3>;\n    }\n    return (\n        <Fragment>\n            {contacts !== null && !loading ? (\n                <TransitionGroup>\n                    {filter !== null\n                        ? filter.map(contact => (\n                              <CSSTransition\n                                  key={contact._id}\n                                  timeout={{ appear: 0, enter: 0, exit: 300 }}\n                                  classNames='roll'\n                              >\n                                  <CL contact={contact} />\n                              </CSSTransition>\n                          ))\n                        : contacts.map(contact => (\n                              <CSSTransition\n                                  key={contact._id}\n                                  timeout={{\n                                      appear: 0,\n                                      enter: 0,\n                                      exit: 300\n                                  }}\n                                  classNames='roll'\n                              >\n                                  <CL contact={contact} />\n                              </CSSTransition>\n                          ))}\n                </TransitionGroup>\n            ) : (\n                <Spin />\n            )}\n        </Fragment>\n    );\n};\nexport default Contactmap;\n"]},"metadata":{},"sourceType":"module"}