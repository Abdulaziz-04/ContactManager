{"ast":null,"code":"import _defineProperty from\"/home/abdul/Documents/Reactprog/ContactManager/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/home/abdul/Documents/Reactprog/ContactManager/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/abdul/Documents/Reactprog/ContactManager/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from'react';import cmContext from'../ContextAPI/CM/cmContext';//UseEffect hook is similar to the concept of ComponentDidMount\nvar Form=function Form(){var context=useContext(cmContext);var addContact=context.addContact,updateContact=context.updateContact,current=context.current;useEffect(function(){if(current!==null){setContact(current);}else{setContact({name:'',email:'',phone:'',type:'Personal'});}},[context,current]);var _useState=useState({name:'',email:'',phone:'',type:'Personal'}),_useState2=_slicedToArray(_useState,2),contact=_useState2[0],setContact=_useState2[1];var name=contact.name,email=contact.email,phone=contact.phone,type=contact.type;var onChange=function onChange(e){setContact(_objectSpread({},contact,_defineProperty({},e.target.name,e.target.value)));};var onSubmit=function onSubmit(e){e.preventDefault();if(current===null){addContact(contact);}else{updateContact(contact);}context.remCurrent();};return React.createElement(\"form\",{onSubmit:onSubmit},React.createElement(\"h2\",{className:\"text-blue\"},context.current?'EDIT CONTACT':'ADD CONTACT'),React.createElement(\"input\",{type:\"text\",value:name,placeholder:\"Name\",name:\"name\",onChange:onChange,required:true}),React.createElement(\"input\",{type:\"email\",value:email,placeholder:\"Email\",name:\"email\",onChange:onChange,required:true}),React.createElement(\"input\",{type:\"text\",value:phone,placeholder:\"Phone\",name:\"phone\",onChange:onChange,required:true}),React.createElement(\"h5\",null,React.createElement(\"div\",null,\"Contact Type:\"),React.createElement(\"input\",{type:\"radio\",checked:type==='Personal',value:\"Personal\",name:\"type\",onChange:onChange}),\"Personal\",React.createElement(\"input\",{type:\"radio\",value:\"Professional\",name:\"type\",checked:type==='Professional',onChange:onChange,style:{marginLeft:'8px'}}),\"Professional\"),React.createElement(\"input\",{type:\"submit\",value:context.current?'Update Contact':'Add Contact',className:\"btn btn-primary btn-block\"}),current&&React.createElement(\"button\",{className:\"btn btn-light btn-block\",onClick:function onClick(){context.remCurrent();}},\"Clear\"));};export default Form;","map":{"version":3,"sources":["/home/abdul/Documents/Reactprog/ContactManager/frontend/src/Components/Form.js"],"names":["React","useState","useContext","useEffect","cmContext","Form","context","addContact","updateContact","current","setContact","name","email","phone","type","contact","onChange","e","target","value","onSubmit","preventDefault","remCurrent","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport cmContext from '../ContextAPI/CM/cmContext';\n//UseEffect hook is similar to the concept of ComponentDidMount\nconst Form = () => {\n    const context = useContext(cmContext);\n    const { addContact, updateContact, current } = context;\n    useEffect(() => {\n        if (current !== null) {\n            setContact(current);\n        } else {\n            setContact({\n                name: '',\n                email: '',\n                phone: '',\n                type: 'Personal'\n            });\n        }\n    }, [context, current]);\n    const [contact, setContact] = useState({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'Personal'\n    });\n    const { name, email, phone, type } = contact;\n    const onChange = e => {\n        setContact({ ...contact, [e.target.name]: e.target.value });\n    };\n    const onSubmit = e => {\n        e.preventDefault();\n        if (current === null) {\n            addContact(contact);\n        } else {\n            updateContact(contact);\n        }\n        context.remCurrent();\n    };\n\n    return (\n        <form onSubmit={onSubmit}>\n            <h2 className='text-blue'>\n                {context.current ? 'EDIT CONTACT' : 'ADD CONTACT'}\n            </h2>\n            <input\n                type='text'\n                value={name}\n                placeholder='Name'\n                name='name'\n                onChange={onChange}\n                required\n            />\n            <input\n                type='email'\n                value={email}\n                placeholder='Email'\n                name='email'\n                onChange={onChange}\n                required\n            />\n            <input\n                type='text'\n                value={phone}\n                placeholder='Phone'\n                name='phone'\n                onChange={onChange}\n                required\n            />\n            <h5>\n                <div>Contact Type:</div>\n                <input\n                    type='radio'\n                    checked={type === 'Personal'}\n                    value='Personal'\n                    name='type'\n                    onChange={onChange}\n                />\n                Personal\n                <input\n                    type='radio'\n                    value='Professional'\n                    name='type'\n                    checked={type === 'Professional'}\n                    onChange={onChange}\n                    style={{ marginLeft: '8px' }}\n                />\n                Professional\n            </h5>\n            <input\n                type='submit'\n                value={context.current ? 'Update Contact' : 'Add Contact'}\n                className='btn btn-primary btn-block'\n            />\n            {current && (\n                <button\n                    className='btn btn-light btn-block'\n                    onClick={() => {\n                        context.remCurrent();\n                    }}\n                >\n                    Clear\n                </button>\n            )}\n        </form>\n    );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}