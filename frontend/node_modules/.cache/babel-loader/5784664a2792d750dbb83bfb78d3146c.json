{"ast":null,"code":"import React,{useContext,Fragment,useEffect}from'react';import cmContext from'../ContextAPI/CM/cmContext';import{CSSTransition,TransitionGroup}from'react-transition-group';import Spin from'../Components/Spinner/Spin';import CL from'./CL';var Contactmap=function Contactmap(){var context=useContext(cmContext);var contacts=context.contacts,filter=context.filter,getContacts=context.getContacts,loading=context.loading;useEffect(function(){getContacts();//eslint-disable-next-line\n},[]);if(contacts!==null&&contacts.length===0){return React.createElement(\"h3\",null,\"Please add Contacts...\");}return React.createElement(Fragment,null,contacts!==null&&!loading?React.createElement(TransitionGroup,null,filter!==null?filter.map(function(contact){return React.createElement(CSSTransition,{key:contact._id,timeout:{appear:0,enter:0,exit:300},classNames:\"roll\"},React.createElement(CL,{contact:contact}));}):contacts.map(function(contact){return React.createElement(CSSTransition,{key:contact._id,timeout:{appear:0,enter:0,exit:300},classNames:\"roll\"},React.createElement(CL,{contact:contact}));})):React.createElement(Spin,null));};export default Contactmap;","map":{"version":3,"sources":["/home/abdul/Documents/Reactprog/ContactManager/frontend/src/Components/Contactmap.js"],"names":["React","useContext","Fragment","useEffect","cmContext","CSSTransition","TransitionGroup","Spin","CL","Contactmap","context","contacts","filter","getContacts","loading","length","map","contact","_id","appear","enter","exit"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,SAAP,KAAsB,4BAAtB,CACA,OAASC,aAAT,CAAwBC,eAAxB,KAA+C,wBAA/C,CACA,MAAOC,CAAAA,IAAP,KAAiB,4BAAjB,CACA,MAAOC,CAAAA,EAAP,KAAe,MAAf,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACrB,GAAMC,CAAAA,OAAO,CAAGT,UAAU,CAACG,SAAD,CAA1B,CADqB,GAEbO,CAAAA,QAFa,CAE8BD,OAF9B,CAEbC,QAFa,CAEHC,MAFG,CAE8BF,OAF9B,CAEHE,MAFG,CAEKC,WAFL,CAE8BH,OAF9B,CAEKG,WAFL,CAEkBC,OAFlB,CAE8BJ,OAF9B,CAEkBI,OAFlB,CAGrBX,SAAS,CAAC,UAAM,CACZU,WAAW,GACX;AACH,CAHQ,CAGN,EAHM,CAAT,CAIA,GAAIF,QAAQ,GAAK,IAAb,EAAqBA,QAAQ,CAACI,MAAT,GAAoB,CAA7C,CAAgD,CAC5C,MAAO,wDAAP,CACH,CACD,MACI,qBAAC,QAAD,MACKJ,QAAQ,GAAK,IAAb,EAAqB,CAACG,OAAtB,CACG,oBAAC,eAAD,MACKF,MAAM,GAAK,IAAX,CACKA,MAAM,CAACI,GAAP,CAAW,SAAAC,OAAO,QACd,qBAAC,aAAD,EACI,GAAG,CAAEA,OAAO,CAACC,GADjB,CAEI,OAAO,CAAE,CAAEC,MAAM,CAAE,CAAV,CAAaC,KAAK,CAAE,CAApB,CAAuBC,IAAI,CAAE,GAA7B,CAFb,CAGI,UAAU,CAAC,MAHf,EAKI,oBAAC,EAAD,EAAI,OAAO,CAAEJ,OAAb,EALJ,CADc,EAAlB,CADL,CAUKN,QAAQ,CAACK,GAAT,CAAa,SAAAC,OAAO,QAChB,qBAAC,aAAD,EACI,GAAG,CAAEA,OAAO,CAACC,GADjB,CAEI,OAAO,CAAE,CACLC,MAAM,CAAE,CADH,CAELC,KAAK,CAAE,CAFF,CAGLC,IAAI,CAAE,GAHD,CAFb,CAOI,UAAU,CAAC,MAPf,EASI,oBAAC,EAAD,EAAI,OAAO,CAAEJ,OAAb,EATJ,CADgB,EAApB,CAXV,CADH,CA2BG,oBAAC,IAAD,MA5BR,CADJ,CAiCH,CA3CD,CA4CA,cAAeR,CAAAA,UAAf","sourcesContent":["import React, { useContext, Fragment, useEffect } from 'react';\nimport cmContext from '../ContextAPI/CM/cmContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport Spin from '../Components/Spinner/Spin';\nimport CL from './CL';\n\nconst Contactmap = () => {\n    const context = useContext(cmContext);\n    const { contacts, filter, getContacts, loading } = context;\n    useEffect(() => {\n        getContacts();\n        //eslint-disable-next-line\n    }, []);\n    if (contacts !== null && contacts.length === 0) {\n        return <h3>Please add Contacts...</h3>;\n    }\n    return (\n        <Fragment>\n            {contacts !== null && !loading ? (\n                <TransitionGroup>\n                    {filter !== null\n                        ? filter.map(contact => (\n                              <CSSTransition\n                                  key={contact._id}\n                                  timeout={{ appear: 0, enter: 0, exit: 300 }}\n                                  classNames='roll'\n                              >\n                                  <CL contact={contact} />\n                              </CSSTransition>\n                          ))\n                        : contacts.map(contact => (\n                              <CSSTransition\n                                  key={contact._id}\n                                  timeout={{\n                                      appear: 0,\n                                      enter: 0,\n                                      exit: 300\n                                  }}\n                                  classNames='roll'\n                              >\n                                  <CL contact={contact} />\n                              </CSSTransition>\n                          ))}\n                </TransitionGroup>\n            ) : (\n                <Spin />\n            )}\n        </Fragment>\n    );\n};\nexport default Contactmap;\n"]},"metadata":{},"sourceType":"module"}