{"ast":null,"code":"import React,{useRef,useContext,useEffect}from'react';import cmContext from'../ContextAPI/CM/cmContext';export var Filter=function Filter(){var context=useContext(cmContext);var text=useRef('');//The useRef hook has the current property which is quite advantageous in these cases\nvar onChange=function onChange(e){if(text.current.value!==''){context.setFilter(e.target.value);}else{context.clearFilter();}};useEffect(function(){if(context.filter===null){text.current.value='';}});return React.createElement(\"form\",null,React.createElement(\"input\",{ref:text,type:\"text\",placeholder:\"Filter Contacts...\",onChange:onChange}));};export default Filter;","map":{"version":3,"sources":["/home/abdul/Documents/Reactprog/ContactManager/frontend/src/Components/Filter.js"],"names":["React","useRef","useContext","useEffect","cmContext","Filter","context","text","onChange","e","current","value","setFilter","target","clearFilter","filter"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,UAAxB,CAAoCC,SAApC,KAAqD,OAArD,CACA,MAAOC,CAAAA,SAAP,KAAsB,4BAAtB,CAEA,MAAO,IAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACxB,GAAMC,CAAAA,OAAO,CAAGJ,UAAU,CAACE,SAAD,CAA1B,CACA,GAAMG,CAAAA,IAAI,CAAGN,MAAM,CAAC,EAAD,CAAnB,CAAyB;AACzB,GAAMO,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAAAC,CAAC,CAAI,CAClB,GAAIF,IAAI,CAACG,OAAL,CAAaC,KAAb,GAAuB,EAA3B,CAA+B,CAC3BL,OAAO,CAACM,SAAR,CAAkBH,CAAC,CAACI,MAAF,CAASF,KAA3B,EACH,CAFD,IAEO,CACHL,OAAO,CAACQ,WAAR,GACH,CACJ,CAND,CAOAX,SAAS,CAAC,UAAM,CACZ,GAAIG,OAAO,CAACS,MAAR,GAAmB,IAAvB,CAA6B,CACzBR,IAAI,CAACG,OAAL,CAAaC,KAAb,CAAqB,EAArB,CACH,CACJ,CAJQ,CAAT,CAKA,MACI,iCACI,6BACI,GAAG,CAAEJ,IADT,CAEI,IAAI,CAAC,MAFT,CAGI,WAAW,CAAC,oBAHhB,CAII,QAAQ,CAAEC,QAJd,EADJ,CADJ,CAUH,CAzBM,CA2BP,cAAeH,CAAAA,MAAf","sourcesContent":["import React, { useRef, useContext, useEffect } from 'react';\nimport cmContext from '../ContextAPI/CM/cmContext';\n\nexport const Filter = () => {\n    const context = useContext(cmContext);\n    const text = useRef(''); //The useRef hook has the current property which is quite advantageous in these cases\n    const onChange = e => {\n        if (text.current.value !== '') {\n            context.setFilter(e.target.value);\n        } else {\n            context.clearFilter();\n        }\n    };\n    useEffect(() => {\n        if (context.filter === null) {\n            text.current.value = '';\n        }\n    });\n    return (\n        <form>\n            <input\n                ref={text}\n                type='text'\n                placeholder='Filter Contacts...'\n                onChange={onChange}\n            />\n        </form>\n    );\n};\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}