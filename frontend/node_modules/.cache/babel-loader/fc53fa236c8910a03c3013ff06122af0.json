{"ast":null,"code":"var _jsxFileName = \"/home/abdul/Documents/Reactprog/ContactManager/frontend/src/ContextAPI/Auth/AuthState.js\";\nimport React, { useReducer } from 'react';\nimport authContext from './authContext';\nimport authReducer from './authReducer';\nimport axios from 'axios';\nimport { LOGIN_FAIL, LOGIN_SUCCESS, LOGOUT, REGISTER_FAIL, REGISTER_SUCCESS, AUTH_ERROR, CLEAR_ERRORS, USER_LOADED } from '../types';\nimport Authtoken from '../../Components/Authtoken';\n\nconst AuthState = props => {\n  const initialState = {\n    user: null,\n    token: localStorage.getItem('token'),\n    isAuth: null,\n    error: null,\n    loading: true\n  };\n\n  const register = async formData => {\n    const config = {\n      header: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  const loadUser = async () => {\n    if (localStorage.token) {\n      Authtoken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/api/login');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  const login = async formData => {\n    const config = {\n      header: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/login', formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  const logout = () => {\n    dispatch({\n      type: LOGOUT\n    });\n  };\n\n  const clearError = () => {\n    dispatch({\n      type: CLEAR_ERRORS\n    });\n  };\n\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  return React.createElement(authContext.Provider, {\n    value: {\n      user: state.user,\n      error: state.error,\n      isAuth: state.isAuth,\n      token: state.token,\n      loading: state.loading,\n      register,\n      clearError,\n      loadUser,\n      login,\n      logout\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AuthState;","map":{"version":3,"sources":["/home/abdul/Documents/Reactprog/ContactManager/frontend/src/ContextAPI/Auth/AuthState.js"],"names":["React","useReducer","authContext","authReducer","axios","LOGIN_FAIL","LOGIN_SUCCESS","LOGOUT","REGISTER_FAIL","REGISTER_SUCCESS","AUTH_ERROR","CLEAR_ERRORS","USER_LOADED","Authtoken","AuthState","props","initialState","user","token","localStorage","getItem","isAuth","error","loading","register","formData","config","header","res","post","dispatch","type","payload","data","loadUser","err","response","msg","get","login","logout","clearError","state","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport authContext from './authContext';\nimport authReducer from './authReducer';\nimport axios from 'axios';\nimport {\n    LOGIN_FAIL,\n    LOGIN_SUCCESS,\n    LOGOUT,\n    REGISTER_FAIL,\n    REGISTER_SUCCESS,\n    AUTH_ERROR,\n    CLEAR_ERRORS,\n    USER_LOADED\n} from '../types';\nimport Authtoken from '../../Components/Authtoken';\n\nconst AuthState = props => {\n    const initialState = {\n        user: null,\n        token: localStorage.getItem('token'),\n        isAuth: null,\n        error: null,\n        loading: true\n    };\n    const register = async formData => {\n        const config = {\n            header: {\n                'Content-Type': 'application/json'\n            }\n        };\n        try {\n            const res = await axios.post('/api/users', formData, config);\n            dispatch({ type: REGISTER_SUCCESS, payload: res.data });\n            loadUser();\n        } catch (err) {\n            dispatch({ type: REGISTER_FAIL, payload: err.response.data.msg });\n        }\n    };\n    const loadUser = async () => {\n        if (localStorage.token) {\n            Authtoken(localStorage.token);\n        }\n        try {\n            const res = await axios.get('/api/login');\n            dispatch({ type: USER_LOADED, payload: res.data });\n        } catch (err) {\n            dispatch({ type: AUTH_ERROR, payload: err.response.data.msg });\n        }\n    };\n    const login = async formData => {\n        const config = {\n            header: {\n                'Content-Type': 'application/json'\n            }\n        };\n        try {\n            const res = await axios.post('/api/login', formData, config);\n            dispatch({ type: LOGIN_SUCCESS, payload: res.data });\n            loadUser();\n        } catch (err) {\n            dispatch({ type: LOGIN_FAIL, payload: err.response.data.msg });\n        }\n    };\n    const logout = () => {\n        dispatch({ type: LOGOUT });\n    };\n    const clearError = () => {\n        dispatch({ type: CLEAR_ERRORS });\n    };\n\n    const [state, dispatch] = useReducer(authReducer, initialState);\n    return (\n        <authContext.Provider\n            value={{\n                user: state.user,\n                error: state.error,\n                isAuth: state.isAuth,\n                token: state.token,\n                loading: state.loading,\n                register,\n                clearError,\n                loadUser,\n                login,\n                logout\n            }}\n        >\n            {props.children}\n        </authContext.Provider>\n    );\n};\n\nexport default AuthState;\n"]},"metadata":{},"sourceType":"module"}