{"ast":null,"code":"var _jsxFileName = \"/home/abdul/Documents/Reactprog/ContactManager/frontend/src/ContextAPI/CM/CmState.js\";\nimport React, { useReducer } from 'react';\nimport cmContext from './cmContext';\nimport cmReducer from './cmReducer';\nimport { CREATE_CONTACT, DELETE_CONTACT, UPDATE_CONTACT, SET_FILTER, CLEAR_CURRENT, SET_CURRENT, CLEAR_FILTER, CONTACT_ERROR, GET_CONTACTS, CLEAR_CONTACTS } from '../types';\nimport axios from 'axios';\n\nconst CmState = props => {\n  const initialState = {\n    contacts: null,\n    current: null,\n    filter: null,\n    prb: null\n  };\n  const [state, dispatch] = useReducer(cmReducer, initialState);\n\n  const addContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/contacts', contact, config);\n      dispatch({\n        type: CREATE_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  const updateContact = async contact => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.put(`/api/contacts/${contact._id}`, contact, config);\n      dispatch({\n        type: UPDATE_CONTACT,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  const deleteContact = async id => {\n    try {\n      await axios.delete(`/api/contacts/${id}`);\n      dispatch({\n        type: DELETE_CONTACT,\n        payload: id\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  const setCurrent = contact => {\n    dispatch({\n      type: SET_CURRENT,\n      payload: contact\n    });\n  };\n\n  const remCurrent = () => {\n    dispatch({\n      type: CLEAR_CURRENT\n    });\n  };\n\n  const setFilter = text => {\n    dispatch({\n      type: SET_FILTER,\n      payload: text\n    });\n  };\n\n  const clearFilter = () => {\n    dispatch({\n      type: CLEAR_FILTER\n    });\n  };\n\n  const getContacts = async () => {\n    try {\n      const res = await axios.get('/api/contacts');\n      dispatch({\n        type: GET_CONTACTS,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: CONTACT_ERROR,\n        payload: err.response.data.msg\n      });\n    }\n  };\n\n  const clearContacts = () => {\n    dispatch({\n      type: CLEAR_CONTACTS\n    });\n  };\n\n  return React.createElement(cmContext.Provider, {\n    value: {\n      contacts: state.contacts,\n      current: state.current,\n      filter: state.filter,\n      prb: state.prb,\n      setCurrent,\n      remCurrent,\n      addContact,\n      deleteContact,\n      updateContact,\n      setFilter,\n      clearFilter,\n      getContacts,\n      clearContacts\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default CmState;","map":{"version":3,"sources":["/home/abdul/Documents/Reactprog/ContactManager/frontend/src/ContextAPI/CM/CmState.js"],"names":["React","useReducer","cmContext","cmReducer","CREATE_CONTACT","DELETE_CONTACT","UPDATE_CONTACT","SET_FILTER","CLEAR_CURRENT","SET_CURRENT","CLEAR_FILTER","CONTACT_ERROR","GET_CONTACTS","CLEAR_CONTACTS","axios","CmState","props","initialState","contacts","current","filter","prb","state","dispatch","addContact","contact","config","headers","res","post","type","payload","data","err","response","msg","updateContact","put","_id","deleteContact","id","delete","setCurrent","remCurrent","setFilter","text","clearFilter","getContacts","get","clearContacts","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport cmContext from './cmContext';\nimport cmReducer from './cmReducer';\nimport {\n    CREATE_CONTACT,\n    DELETE_CONTACT,\n    UPDATE_CONTACT,\n    SET_FILTER,\n    CLEAR_CURRENT,\n    SET_CURRENT,\n    CLEAR_FILTER,\n    CONTACT_ERROR,\n    GET_CONTACTS,\n    CLEAR_CONTACTS\n} from '../types';\nimport axios from 'axios';\n\nconst CmState = props => {\n    const initialState = {\n        contacts: null,\n        current: null,\n        filter: null,\n        prb: null\n    };\n    const [state, dispatch] = useReducer(cmReducer, initialState);\n    const addContact = async contact => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        try {\n            const res = await axios.post('/api/contacts', contact, config);\n            dispatch({ type: CREATE_CONTACT, payload: res.data });\n        } catch (err) {\n            dispatch({ type: CONTACT_ERROR, payload: err.response.data.msg });\n        }\n    };\n    const updateContact = async contact => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        try {\n            const res = await axios.put(\n                `/api/contacts/${contact._id}`,\n                contact,\n                config\n            );\n            dispatch({ type: UPDATE_CONTACT, payload: res.data });\n        } catch (err) {\n            dispatch({ type: CONTACT_ERROR, payload: err.response.data.msg });\n        }\n    };\n    const deleteContact = async id => {\n        try {\n            await axios.delete(`/api/contacts/${id}`);\n            dispatch({ type: DELETE_CONTACT, payload: id });\n        } catch (err) {\n            dispatch({ type: CONTACT_ERROR, payload: err.response.data.msg });\n        }\n    };\n    const setCurrent = contact => {\n        dispatch({ type: SET_CURRENT, payload: contact });\n    };\n    const remCurrent = () => {\n        dispatch({ type: CLEAR_CURRENT });\n    };\n\n    const setFilter = text => {\n        dispatch({ type: SET_FILTER, payload: text });\n    };\n    const clearFilter = () => {\n        dispatch({ type: CLEAR_FILTER });\n    };\n    const getContacts = async () => {\n        try {\n            const res = await axios.get('/api/contacts');\n            dispatch({ type: GET_CONTACTS, payload: res.data });\n        } catch (err) {\n            dispatch({ type: CONTACT_ERROR, payload: err.response.data.msg });\n        }\n    };\n    const clearContacts = () => {\n        dispatch({ type: CLEAR_CONTACTS });\n    };\n    return (\n        <cmContext.Provider\n            value={{\n                contacts: state.contacts,\n                current: state.current,\n                filter: state.filter,\n                prb: state.prb,\n                setCurrent,\n                remCurrent,\n                addContact,\n                deleteContact,\n                updateContact,\n                setFilter,\n                clearFilter,\n                getContacts,\n                clearContacts\n            }}\n        >\n            {props.children}\n        </cmContext.Provider>\n    );\n};\n\nexport default CmState;\n"]},"metadata":{},"sourceType":"module"}