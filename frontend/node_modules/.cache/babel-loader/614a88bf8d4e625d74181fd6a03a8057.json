{"ast":null,"code":"var _jsxFileName = \"/home/abdul/Documents/Reactprog/ContactManager/frontend/src/Components/Form.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport cmContext from '../ContextAPI/CM/cmContext'; //UseEffect hook is similar to the concept of ComponentDidMount\n\nconst Form = () => {\n  const context = useContext(cmContext);\n  const {\n    addContact,\n    updateContact,\n    current\n  } = context;\n  useEffect(() => {\n    if (current !== null) {\n      setContact(current);\n    } else {\n      setContact({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'Personal'\n      });\n    }\n  }, [context, current]);\n  const [contact, setContact] = useState({\n    name: '',\n    email: '',\n    phone: '',\n    type: 'Personal'\n  });\n  const {\n    name,\n    email,\n    phone,\n    type\n  } = contact;\n\n  const onChange = e => {\n    setContact({ ...contact,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (current === null) {\n      addContact(contact);\n    } else {\n      updateContact(contact);\n    }\n\n    context.remCurrent();\n  };\n\n  return React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"text-blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, context.current ? 'EDIT CONTACT' : 'ADD CONTACT'), React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    placeholder: \"Name\",\n    name: \"name\",\n    onChange: onChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    value: email,\n    placeholder: \"Email\",\n    name: \"email\",\n    onChange: onChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    value: phone,\n    placeholder: \"Phone\",\n    name: \"phone\",\n    onChange: onChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Contact Type:\"), React.createElement(\"input\", {\n    type: \"radio\",\n    checked: type === 'Personal',\n    value: \"Personal\",\n    name: \"type\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), \"Personal\", React.createElement(\"input\", {\n    type: \"radio\",\n    value: \"Professional\",\n    name: \"type\",\n    checked: type === 'Professional',\n    onChange: onChange,\n    style: {\n      marginLeft: '8px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), \"Professional\"), React.createElement(\"input\", {\n    type: \"submit\",\n    value: context.current ? 'Update Contact' : 'Add Contact',\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), current && React.createElement(\"button\", {\n    className: \"btn btn-light btn-block\",\n    onClick: () => {\n      context.remCurrent();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Clear\"));\n};\n\nexport default Form;","map":{"version":3,"sources":["/home/abdul/Documents/Reactprog/ContactManager/frontend/src/Components/Form.js"],"names":["React","useState","useContext","useEffect","cmContext","Form","context","addContact","updateContact","current","setContact","name","email","phone","type","contact","onChange","e","target","value","onSubmit","preventDefault","remCurrent","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport cmContext from '../ContextAPI/CM/cmContext';\n//UseEffect hook is similar to the concept of ComponentDidMount\nconst Form = () => {\n    const context = useContext(cmContext);\n    const { addContact, updateContact, current } = context;\n    useEffect(() => {\n        if (current !== null) {\n            setContact(current);\n        } else {\n            setContact({\n                name: '',\n                email: '',\n                phone: '',\n                type: 'Personal'\n            });\n        }\n    }, [context, current]);\n    const [contact, setContact] = useState({\n        name: '',\n        email: '',\n        phone: '',\n        type: 'Personal'\n    });\n    const { name, email, phone, type } = contact;\n    const onChange = e => {\n        setContact({ ...contact, [e.target.name]: e.target.value });\n    };\n    const onSubmit = e => {\n        e.preventDefault();\n        if (current === null) {\n            addContact(contact);\n        } else {\n            updateContact(contact);\n        }\n        context.remCurrent();\n    };\n\n    return (\n        <form onSubmit={onSubmit}>\n            <h2 className='text-blue'>\n                {context.current ? 'EDIT CONTACT' : 'ADD CONTACT'}\n            </h2>\n            <input\n                type='text'\n                value={name}\n                placeholder='Name'\n                name='name'\n                onChange={onChange}\n                required\n            />\n            <input\n                type='email'\n                value={email}\n                placeholder='Email'\n                name='email'\n                onChange={onChange}\n                required\n            />\n            <input\n                type='text'\n                value={phone}\n                placeholder='Phone'\n                name='phone'\n                onChange={onChange}\n                required\n            />\n            <h5>\n                <div>Contact Type:</div>\n                <input\n                    type='radio'\n                    checked={type === 'Personal'}\n                    value='Personal'\n                    name='type'\n                    onChange={onChange}\n                />\n                Personal\n                <input\n                    type='radio'\n                    value='Professional'\n                    name='type'\n                    checked={type === 'Professional'}\n                    onChange={onChange}\n                    style={{ marginLeft: '8px' }}\n                />\n                Professional\n            </h5>\n            <input\n                type='submit'\n                value={context.current ? 'Update Contact' : 'Add Contact'}\n                className='btn btn-primary btn-block'\n            />\n            {current && (\n                <button\n                    className='btn btn-light btn-block'\n                    onClick={() => {\n                        context.remCurrent();\n                    }}\n                >\n                    Clear\n                </button>\n            )}\n        </form>\n    );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}