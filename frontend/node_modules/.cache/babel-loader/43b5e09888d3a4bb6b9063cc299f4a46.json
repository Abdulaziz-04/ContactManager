{"ast":null,"code":"var _jsxFileName = \"/home/abdul/Documents/Reactprog/ContactManager/frontend/src/ContextAPI/Alert/AlertState.js\";\nimport React, { useReducer } from 'react';\nimport alertContext from './alertContext';\nimport alertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT, CLOSE_ALERT } from '../types';\n\nconst uuid = require('uuid');\n\nconst AlertState = props => {\n  const initialState = {\n    alerts: []\n  };\n  const [state, dispatch] = useReducer(alertReducer, initialState);\n\n  const setAlert = (msg, type) => {\n    const id = uuid.v4();\n    dispatch({\n      type: SET_ALERT,\n      payload: {\n        msg,\n        type,\n        id\n      }\n    });\n    setTimeout(() => dispatch({\n      type: REMOVE_ALERT,\n      payload: {\n        id\n      }\n    }), 7000);\n  };\n\n  const remAlert = () => {\n    dispatch({\n      type: CLOSE_ALERT\n    });\n  };\n\n  return React.createElement(alertContext.Provider, {\n    value: {\n      alerts: state.alerts,\n      setAlert,\n      remAlert\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default AlertState;","map":{"version":3,"sources":["/home/abdul/Documents/Reactprog/ContactManager/frontend/src/ContextAPI/Alert/AlertState.js"],"names":["React","useReducer","alertContext","alertReducer","SET_ALERT","REMOVE_ALERT","CLOSE_ALERT","uuid","require","AlertState","props","initialState","alerts","state","dispatch","setAlert","msg","type","id","v4","payload","setTimeout","remAlert","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,WAAlC,QAAqD,UAArD;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AACxB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,MAAM,EAAE;AADS,GAArB;AAGA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,UAAU,CAACE,YAAD,EAAeQ,YAAf,CAApC;;AACA,QAAMI,QAAQ,GAAG,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC5B,UAAMC,EAAE,GAAGX,IAAI,CAACY,EAAL,EAAX;AACAL,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEb,SAAR;AAAmBgB,MAAAA,OAAO,EAAE;AAAEJ,QAAAA,GAAF;AAAOC,QAAAA,IAAP;AAAaC,QAAAA;AAAb;AAA5B,KAAD,CAAR;AACAG,IAAAA,UAAU,CACN,MAAMP,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEZ,YAAR;AAAsBe,MAAAA,OAAO,EAAE;AAAEF,QAAAA;AAAF;AAA/B,KAAD,CADR,EAEN,IAFM,CAAV;AAIH,GAPD;;AAQA,QAAMI,QAAQ,GAAG,MAAM;AACnBR,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEX;AAAR,KAAD,CAAR;AACH,GAFD;;AAGA,SACI,oBAAC,YAAD,CAAc,QAAd;AACI,IAAA,KAAK,EAAE;AACHM,MAAAA,MAAM,EAAEC,KAAK,CAACD,MADX;AAEHG,MAAAA,QAFG;AAGHO,MAAAA;AAHG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKZ,KAAK,CAACa,QAPX,CADJ;AAWH,CA3BD;;AA6BA,eAAed,UAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport alertContext from './alertContext';\nimport alertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT, CLOSE_ALERT } from '../types';\nconst uuid = require('uuid');\n\nconst AlertState = props => {\n    const initialState = {\n        alerts: []\n    };\n    const [state, dispatch] = useReducer(alertReducer, initialState);\n    const setAlert = (msg, type) => {\n        const id = uuid.v4();\n        dispatch({ type: SET_ALERT, payload: { msg, type, id } });\n        setTimeout(\n            () => dispatch({ type: REMOVE_ALERT, payload: { id } }),\n            7000\n        );\n    };\n    const remAlert = () => {\n        dispatch({ type: CLOSE_ALERT });\n    };\n    return (\n        <alertContext.Provider\n            value={{\n                alerts: state.alerts,\n                setAlert,\n                remAlert\n            }}\n        >\n            {props.children}\n        </alertContext.Provider>\n    );\n};\n\nexport default AlertState;\n"]},"metadata":{},"sourceType":"module"}