{"ast":null,"code":"var _jsxFileName = \"/home/abdul/Documents/Reactprog/ContactManager/frontend/src/Components/Filter.js\";\nimport React, { useRef, useContext, useEffect } from 'react';\nimport cmContext from '../ContextAPI/CM/cmContext';\nexport const Filter = () => {\n  const context = useContext(cmContext);\n  const text = useRef(''); //The useRef hook has the current property which is quite advantageous in these cases\n\n  const onChange = e => {\n    if (text.current.value !== '') {\n      context.setFilter(e.target.value);\n    } else {\n      context.clearFilter();\n    }\n  };\n\n  useEffect(() => {\n    if (context.filter === null) {\n      text.current.value = '';\n    }\n  });\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: text,\n    type: \"text\",\n    placeholder: \"Filter Contacts...\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n};\nexport default Filter;","map":{"version":3,"sources":["/home/abdul/Documents/Reactprog/ContactManager/frontend/src/Components/Filter.js"],"names":["React","useRef","useContext","useEffect","cmContext","Filter","context","text","onChange","e","current","value","setFilter","target","clearFilter","filter"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AACxB,QAAMC,OAAO,GAAGJ,UAAU,CAACE,SAAD,CAA1B;AACA,QAAMG,IAAI,GAAGN,MAAM,CAAC,EAAD,CAAnB,CAFwB,CAEC;;AACzB,QAAMO,QAAQ,GAAGC,CAAC,IAAI;AAClB,QAAIF,IAAI,CAACG,OAAL,CAAaC,KAAb,KAAuB,EAA3B,EAA+B;AAC3BL,MAAAA,OAAO,CAACM,SAAR,CAAkBH,CAAC,CAACI,MAAF,CAASF,KAA3B;AACH,KAFD,MAEO;AACHL,MAAAA,OAAO,CAACQ,WAAR;AACH;AACJ,GAND;;AAOAX,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIG,OAAO,CAACS,MAAR,KAAmB,IAAvB,EAA6B;AACzBR,MAAAA,IAAI,CAACG,OAAL,CAAaC,KAAb,GAAqB,EAArB;AACH;AACJ,GAJQ,CAAT;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,GAAG,EAAEJ,IADT;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,WAAW,EAAC,oBAHhB;AAII,IAAA,QAAQ,EAAEC,QAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAUH,CAzBM;AA2BP,eAAeH,MAAf","sourcesContent":["import React, { useRef, useContext, useEffect } from 'react';\nimport cmContext from '../ContextAPI/CM/cmContext';\n\nexport const Filter = () => {\n    const context = useContext(cmContext);\n    const text = useRef(''); //The useRef hook has the current property which is quite advantageous in these cases\n    const onChange = e => {\n        if (text.current.value !== '') {\n            context.setFilter(e.target.value);\n        } else {\n            context.clearFilter();\n        }\n    };\n    useEffect(() => {\n        if (context.filter === null) {\n            text.current.value = '';\n        }\n    });\n    return (\n        <form>\n            <input\n                ref={text}\n                type='text'\n                placeholder='Filter Contacts...'\n                onChange={onChange}\n            />\n        </form>\n    );\n};\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}